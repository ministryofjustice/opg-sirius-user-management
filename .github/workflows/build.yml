name: Test & Build

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  actions: read
  checks: write
  contents: write
  deployments: none
  issues: none
  packages: none
  pull-requests: write
  repository-projects: none
  security-events: write
  statuses: none

defaults:
  run:
    shell: bash

jobs:
  identify:
    name: Identify version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: "0"
      - name: Define commit SHA and branch
        id: commit_branch
        run: |
          if [ "${{ github.head_ref }}" == "" ]; then
              echo "COMMIT=${{github.sha}}" >> $GITHUB_OUTPUT
              echo "BRANCH=main" >> $GITHUB_OUTPUT
          else
              echo "COMMIT=${{github.event.pull_request.head.sha}}" >> $GITHUB_OUTPUT
              echo "BRANCH=${{github.head_ref}}" >> $GITHUB_OUTPUT
          fi
    outputs:
      commit: ${{ steps.commit_branch.outputs.COMMIT }}
      branch: ${{ steps.commit_branch.outputs.BRANCH }}

  create-tag:
    name: Create Tags
    uses: ./.github/workflows/create-tags.yml

  build:
    name: Build Sirius Workflow
    uses: ministryofjustice/opg-github-workflows/.github/workflows/build-multi-architecture-image.yml@361d19a6d7b291dab5d46f04765239341a4ca86b # v3.16.0
    with:
      image_name: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/sirius-user-management
      build_options: --file docker/sirius-user-management/Dockerfile

  test:
    name: Test User Management
    needs: ['identify', 'create-tag']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Cache GO Dependencies
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: ~/.gocache
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run Tests
        run: make unit-test

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@3a74b2957438d0b6e2e61d67b05318aa25c9e6c6 # v2.20.0
        if: ${{ always() && github.actor != 'dependabot[bot]' }}
        with:
          check_name: "Unit Test Results"
          files: test-results/unit-tests.xml

      - name: Publish pacts
        if: github.actor != 'dependabot[bot]'
        run: |
          docker compose run --rm pact-cli pact-broker publish ./pacts/sirius-user-management-sirius.json \
            --consumer-app-version ${{ needs.identify.outputs.commit }} \
            --branch ${{ needs.identify.outputs.branch }} \
            --tag ${{ needs.create-tag.outputs.tag }} \
            --broker-base-url https://pact-broker.api.opg.service.justice.gov.uk \
            --broker-username admin \
            --broker-password ${{ secrets.PACT_BROKER_PASSWORD }}

      - name: Compare pacts
        if: github.actor == 'dependabot[bot]'
        env:
          PACT_DIR: ./pacts
          PACT_BROKER_URL: https://pact-broker.api.opg.service.justice.gov.uk
        run: |
          curl ${PACT_BROKER_URL}/pacts/provider/sirius/consumer/sirius-user-management/latest > /tmp/latest-pact.json
          (diff <(jq --sort-keys . ${PACT_DIR}/sirius-user-management-sirius.json) <(jq --sort-keys . /tmp/latest-pact.json) || true) | (! grep '<')

      - name: Upload Code Coverage
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: test-results/test-coverage.txt
          fail_ci_if_error: true
          verbose: true

      - name: Persist Pacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: pacts
          path: |
            ./pacts/sirius-user-management-sirius.json

  lint:
    name: GO lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Run linting
        run: make lint
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@755f44910c12a3d7ca0d8c6e42c048b3362f7cec # v3.30.8
        if: always()
        with:
          sarif_file: test-results/golangci-lint.sarif

  cypress:
    name: Cypress
    runs-on: ubuntu-latest
    needs:
      - build
      - test
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Set up Docker
        run: |
          echo '{"experimental": true, "features": { "containerd-snapshotter": true }}' | sudo tee -a /etc/docker/daemon.json
          sudo systemctl restart docker
          docker run --privileged --rm tonistiigi/binfmt --install all
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          path: /tmp/images
          name: multi-arch-image
      - name: Load Images
        run: |
          docker load -i /tmp/images/multi-arch-image.tar

      - name: Run Cypress tests
        run: make cypress

      - name: Upload Cypress screenshots
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

  push:
    name: "Push Images"
    runs-on: ubuntu-latest
    needs: ['identify', 'create-tag', 'build', 'test', 'lint', 'cypress']
    if: github.actor != 'dependabot[bot]'
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: "0"
      - uses: unfor19/install-aws-cli-action@f5b46b7f32cf5e7ebd652656c5036bf83dd1e60c # 1.0.8

      - name: Set up Docker
        run: |
          echo '{"experimental": true, "features": { "containerd-snapshotter": true }}' | sudo tee -a /etc/docker/daemon.json
          sudo systemctl restart docker
          docker run --privileged --rm tonistiigi/binfmt --install all
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          path: /tmp/images
          name: multi-arch-image
      - name: Load Images
        run: |
          docker load -i /tmp/images/multi-arch-image.tar

      - name: Trivy Image Vulnerability Scanner
        run: make scan

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@755f44910c12a3d7ca0d8c6e42c048b3362f7cec # v3.30.8
        if: always()
        with:
          sarif_file: "test-results/trivy.sarif"

      - name: Configure OIDC AWS credentials for ECR push
        uses: aws-actions/configure-aws-credentials@00943011d9042930efac3dcd3a170e4273319bc8 # v5.1.0
        with:
          role-to-assume: arn:aws:iam::311462405659:role/sirius-component-ecr-role
          role-session-name: opg-sirius-user-management-github-actions-ecr-push
          role-duration-seconds: 900
          aws-region: eu-west-1

      - name: ECR Login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registries: 311462405659

      - name: Push
        run: |
          docker tag 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/sirius-user-management:latest 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/sirius-user-management:${{ needs.create-tag.outputs.tag }}
          if [ "${{ needs.identify.outputs.branch }}" == "main" ]; then
            # We want all of the tags pushed
            docker tag 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/sirius-user-management:latest 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/sirius-user-management:main-${{ needs.create-tag.outputs.tag }}
            docker tag 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/sirius-user-management:latest 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/sirius-user-management:main-${{ needs.create-tag.outputs.tag }}-${{ needs.create-tag.outputs.timestamp }}
            docker push --all-tags 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/sirius-user-management
          else
            docker push 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/sirius-user-management:${{ needs.create-tag.outputs.tag }}
          fi

  end_of_pr_workflow:
    name: End of PR Workflow
    runs-on: ubuntu-latest
    if: always()
    needs: ['identify', 'create-tag', 'build', 'test', 'lint', 'cypress', 'push']
    steps:
      - name: End of PR Workflow
        run: |
          if ${{ contains(needs.*.result,'failure') }}
          then
            echo "Not all checks succedeed, check the previous jobs."
            exit 1
          else
            echo "All checks succedeed!"
            exit 0
          fi

  push-tags:
    runs-on: ubuntu-latest
    needs: ['create-tag', 'end_of_pr_workflow']
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Configure OIDC AWS credentials for SSM
        uses: aws-actions/configure-aws-credentials@00943011d9042930efac3dcd3a170e4273319bc8 # v5.1.0
        with:
          role-to-assume: arn:aws:iam::997462338508:role/sirius-component-ssm-role
          role-session-name: opg-sirius-user-management-github-actions-ssm-push
          role-duration-seconds: 900
          aws-region: eu-west-1

      - name: Install AWS CLI
        id: install-aws-cli
        uses: unfor19/install-aws-cli-action@f5b46b7f32cf5e7ebd652656c5036bf83dd1e60c # 1.0.8

      - name: Push Tag to Parameter Store
        run: |
          aws ssm put-parameter --name "opg-sirius-user-management-latest-green-build" --type "String" --value "${{ needs.create-tag.outputs.tag }}" --overwrite --region=eu-west-1

      - name: Trigger Dev Deploy
        shell: bash
        run: curl -u ${{ secrets.JENKINS_API_USER }}:${{ secrets.JENKINS_API_TOKEN }} "https://${{ secrets.JENKINS_URL }}/job/Sirius/job/Deploy_to_Development/build?token=${{ secrets.JENKINS_API_TOKEN_NAME }}&cause=Triggered+by+opg-sirius-user-management"
